:root {
    --clr-primary: #1CB7A9;
    --clr-bg: rgba(40,52,61,0.5);
    --clr-dark: #28343D;
    --clr-accent: #374457;
    --clr-light: #fff;
    --sidebar-width: 250px;
}

/* Reset */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

html, body {
    height: 100%;
}

/* Body / layout */
body {
    font-family: 'Segoe UI', sans-serif;
    background: var(--clr-dark);
    color: var(--clr-light);
    display: flex;
    overflow: hidden; /* keep main-content as the only scroll container */
}

/* ===========================
   Sidebar (desktop)
   =========================== */
.sidebar {
    width: var(--sidebar-width);
    height: 100vh;
    background: var(--clr-bg);
    backdrop-filter: blur(16px);
    box-shadow: 0 0 20px rgba(0,0,0,0.4);
    position: fixed;
    top: 0;
    left: 0;
    z-index: 100;
    padding: 2rem 1rem;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
}

.profile {
    text-align: center;
    margin-bottom: 3rem;
}

    .profile img {
        width: 80px;
        height: 80px;
        border-radius: 50%;
        object-fit: cover;
        margin-bottom: 1rem;
    }

    .profile h1 {
        font-size: 1.2rem;
        margin-bottom: .3rem;
    }

    .profile p {
        font-size: .9rem;
        color: var(--clr-primary);
    }

.sidebar-nav {
    margin-top: 2rem;
    margin-bottom: 2rem;
    display: flex;
    flex-direction: column;
    gap: 1rem;
}

.nav-link {
    position: relative;
    color: var(--clr-light);
    text-decoration: none;
    font-weight: 500;
    transition: color .3s, font-weight .3s;
}

    .nav-link .progress {
        position: absolute;
        left: 0;
        bottom: 0;
        width: 100%;
        height: 3px;
        background: transparent;
    }

        .nav-link .progress::after {
            content: '';
            display: block;
            width: 0%;
            height: 100%;
            background: linear-gradient(to right, var(--clr-primary) 0%, rgba(28,183,169,0) 100%);
            transition: width .6s ease;
            margin: 4px 0;
        }

    .nav-link.active, .nav-link:hover {
        color: var(--clr-primary);
        font-weight: 700;
    }

        .nav-link.active .progress::after {
            width: 100%;
        }

/* ===========================
   Main scroll container (desktop)
   =========================== */
.main-content {
    margin-left: var(--sidebar-width);
    width: calc(100% - var(--sidebar-width));
    height: 100vh;
    overflow-y: scroll;
    scroll-snap-type: y mandatory;
    scroll-behavior: smooth;
}

/* Overlay: visual only; never intercept clicks */
.overlay {
    position: absolute;
    inset: 0;
    background: rgba(0,0,0,0.5);
    z-index: 1;
    pointer-events: none; /* overlay shouldn't block clicks */
}

/* ===========================
   Panel (sections) — updated to use an in-flow panel-inner
   =========================== */
.panel {
    position: relative;
    min-height: 100vh;
    scroll-snap-align: start;
    background-size: cover;
    background-position: center;
    padding: 0; /* spacing handled by .panel-inner */
    display: block;
}

/* NEW: wrapper that holds title + cards in the same flow */
.panel-inner {
    position: relative;
    z-index: 2; /* above overlay */
    padding: 2.25rem 3rem; /* controls top spacing & horizontal padding */
    display: block;
}

/* Panel content (titles) — now in-flow inside the panel-inner */
.panel-content {
    position: relative; /* in-flow element */
    z-index: 3;
    margin-bottom: 1rem; /* gap between title and cards */
    color: white;
    pointer-events: auto;
}

    /* keep center variant visually centered while in-flow */
    .panel-content.center {
        height: 100vh;
        display: flex; /* flexbox layout */
        flex-direction: column; /* stack text vertically */
        justify-content: center; /* vertical centering */
        align-items: center; /* horizontal centering */
        text-align: center;
        margin-left: auto;
        margin-right: auto;
        max-width: 900px;
        padding-top: 0; /* remove extra top gap */
        padding-bottom: 0;
    }

    /* top-left variant is left-aligned in the flow */
    .panel-content.top-left {
        text-align: left;
        padding: 0.1rem 0; /* small padding */
    }

    .panel-content h1 {
        font-size: 7rem;
        font-weight: 800;
        line-height: 1.1;
        margin-bottom: 1rem;
    }

    .panel-content h2 {
        font-size: 3.5rem;
        font-weight: 700;
        line-height: 1.1;
        margin-bottom: 1rem;
    }

    .panel-content h3 {
        font-size: 4rem;
        font-weight: 700;
        line-height: 1.1;
        margin-bottom: 1rem;
    }

    .panel-content p {
        font-size: 1.3rem;
    }

/* ===========================
   Card grids (flow content) — inside .panel-inner directly after title
   =========================== */
.card-grid,
#featured-cards,
#brand-cards,
#animation-cards,
#cgi-cards {
    display: grid;
    gap: 1.5rem;
    align-items: start;
    margin: 0;
    padding: 0; /* .panel-inner supplies the outer padding */
}

/* keep your grid columns per-section */
.card-grid,
#featured-cards {
    grid-template-columns: repeat(auto-fill, minmax(260px, 1fr));
}

#brand-cards,
#animation-cards,
#cgi-cards {
    grid-template-columns: repeat(auto-fill, minmax(220px, 1fr));
}

/* ===========================
   Featured project styling (unchanged)
   =========================== */
.featured-project {
    background: rgba(30,40,50,0.85);
    border-radius: 12px;
    overflow: hidden;
    box-shadow: 0 6px 20px rgba(0,0,0,0.5);
    display: flex;
    flex-direction: column;
    transition: transform .25s ease, box-shadow .25s ease;
}

    .featured-project:hover {
        transform: translateY(-5px);
        box-shadow: 0 10px 25px rgba(0,0,0,0.6);
    }

    .featured-project > a > img {
        width: 100%;
        height: auto;
        display: block;
    }

    .featured-project .details {
        padding: 1rem;
        color: white;
    }

/* ===========================
   Small cards (projects) unchanged
   =========================== */
.project {
    background: rgba(40,52,61,0.75);
    border-radius: 10px;
    padding: 0.2rem;
    box-shadow: 0 4px 12px rgba(0,0,0,0.4);
    text-align: center;
    transition: transform .25s ease, box-shadow .25s ease;
    position: relative;
    z-index: 2; /* above overlay, below panel-content */
}

    .project:hover {
        transform: translateY(-5px);
        box-shadow: 0 8px 20px rgba(0,0,0,0.6);
    }

    .project img {
        width: 100%;
        height: 140px;
        object-fit: cover;
        border-radius: 8px;
        margin-bottom: 0.5rem;
    }

    .project p {
        padding: 0.1rem;
    }

    .project a,
    .featured-project a {
        display: block;
        color: inherit;
        text-decoration: none;
    }

/* highlight */
.highlight-project {
    border: 2px solid var(--clr-primary);
    background-color: rgba(28,183,169,0.12);
    text-align: center;
}

    .highlight-project p {
        padding: 0.1rem;
    }

/* built-with */
.built-with {
    margin-top: .8rem;
    font-size: .9rem;
    color: var(--clr-primary);
    font-style: italic;
}

.built-with-logos {
    margin-top: 0.5rem;
    display: flex;
    gap: 0.6rem;
    flex-wrap: wrap;
    justify-content: left;
    align-items: center;
    padding: 0.1rem 0.3rem;
}

    .built-with-logos img {
        width: 24px;
        height: 24px;
        object-fit: contain;
        transition: transform .2s ease;
    }

        .built-with-logos img:hover {
            transform: scale(1.2);
        }

.built-with-label {
    font-size: .7rem;
    opacity: .5;
}

/* ===========================
   Mobile top bar + drawer (styles) unchanged except small adjustments
   =========================== */
.mobile-bar {
    display: none; /* shown only on small screens via media query */
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    height: 56px;
    background: rgba(40,52,61,0.85);
    backdrop-filter: blur(12px);
    z-index: 110; /* above sidebar and overlays */
    align-items: center;
    gap: 12px;
    padding: 0 12px;
    box-shadow: 0 2px 12px rgba(0,0,0,0.3);
    justify-content: flex-start; /* left cluster + hamburger on right */
}

.mobile-left, .mobile-right {
    display: flex;
    align-items: center;
    gap: 8px;
}

.mobile-right {
    margin-left: auto;
}

.mobile-profile {
    width: 40px;
    height: 40px;
    border-radius: 50%;
    object-fit: cover;
    display: block;
    box-shadow: 0 2px 6px rgba(0,0,0,0.35);
    border: 2px solid rgba(255,255,255,0.06);
}

.mobile-brand {
    display: block;
    position: relative;
    margin-left: 10px;
    z-index: 111;
    color: #fff;
    font-weight: 700;
    font-size: 0.95rem;
    line-height: 1;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    max-width: 60%;
    text-align: left;
    pointer-events: none;
}

@media (max-width: 360px) {
    .mobile-brand {
        font-size: 0.85rem;
        max-width: 50%;
    }
}

.hamburger {
    appearance: none;
    border: 0;
    background: transparent;
    color: #fff;
    font-size: 26px;
    line-height: 1;
    cursor: pointer;
    padding: 6px 8px;
    border-radius: 6px;
}

    .hamburger:focus {
        outline: 2px solid rgba(255,255,255,.3);
        outline-offset: 2px;
    }

.mobile-menu {
    display: none;
    position: fixed;
    top: 56px;
    left: 0;
    right: 0;
    background: rgba(40,52,61,0.97);
    z-index: 109;
    padding: 10px 12px 14px;
    border-bottom: 1px solid rgba(255,255,255,0.1);
}

    .mobile-menu.open {
        display: block;
    }

    .mobile-menu .nav-link {
        display: block;
        padding: 10px 6px;
    }

    .mobile-menu .progress {
        display: none;
    }

/* ===========================
   Responsive tweaks
   =========================== */
@media (max-width: 900px) {
    .sidebar {
        display: none;
    }

    .mobile-bar {
        display: flex;
    }

    .main-content {
        margin-left: 0;
        width: 100%;
        height: 100vh;
        overflow-y: scroll;
        scroll-snap-type: y mandatory;
        padding-top: 56px; /* keep content below the mobile bar */
    }

    .panel {
        /* remain a block; spacing is done by .panel-inner */
    }

    .panel-inner {
        padding: calc(56px + 1rem) 1rem 1.5rem;
    }

    .panel-content.top-left {
        position: sticky;
        left: 0;
        padding: 0 0.5rem;
        margin: 0;
        z-index: 105; /* below mobile-bar (110) but above cards */
        background: transparent;
    }

    #featured-cards {
        grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
    }

    #brand-cards, #animation-cards, #cgi-cards {
        grid-template-columns: repeat(auto-fill, minmax(180px, 1fr));
    }

    .panel-content h1 {
        font-size: 3rem;
    }

    .panel-content h2 {
        font-size: 2rem;
    }

    .panel-content h3 {
        font-size: 2rem;
    }

    .panel-content p {
        font-size: 1rem;
    }

    #featured-cards .built-with-logos img {
        width: 18px;
        height: 18px;
    }
}

@media (max-width:768px) {
    #featured-cards {
        flex-direction: column;
        align-items: center;
        padding: 0;
    }

    .featured-project {
        flex-direction: column;
        max-width: 100%;
        padding: .1rem;
        margin: 1rem 0;
    }

        .featured-project img {
            width: 100%;
            height: auto;
            margin-bottom: 1rem;
            transform: none !important;
        }
}

/* Accessibility / UX touches */
a:focus, button:focus {
    outline: 2px solid rgba(255,255,255,0.15);
    outline-offset: 3px;
}

body, button, a {
    -webkit-tap-highlight-color: rgba(0,0,0,0);
}

/* ===========================
   Overlay & embed styles (base)
   =========================== */

/* Fullscreen overlay (dialog) */
#fullscreen-overlay,
.fullscreen-overlay {
    position: fixed;
    inset: 0;
    display: none; /* hidden by default */
    align-items: center;
    justify-content: center;
    background: rgba(0,0,0,0.75);
    z-index: 9999;
    padding: 28px;
    box-sizing: border-box;
}

    #fullscreen-overlay.open,
    .fullscreen-overlay.open {
        display: flex;
    }

    #fullscreen-overlay[aria-hidden="true"],
    .fullscreen-overlay[aria-hidden="true"] {
        display: none !important;
    }

.fs-inner {
    background: linear-gradient(180deg, rgba(15,20,25,0.98), rgba(10,12,14,0.98));
    border-radius: 12px;
    width: min(1100px, 98%);
    max-height: 92vh;
    overflow: hidden; /* important to contain content */
    outline: none;
    display: flex;
    flex-direction: column;
    box-shadow: 0 10px 40px rgba(0,0,0,0.6);
}

.fs-close {
    position: absolute;
    right: 18px;
    top: 16px;
    z-index: 10;
    border: none;
    background: transparent;
    color: var(--clr-light);
    font-size: 20px;
    cursor: pointer;
    padding: 6px 10px;
}

/* content wrapper: header / content / footer — middle row grows */
.fs-content {
    display: grid;
    grid-template-rows: auto 1fr auto;
    gap: 12px;
    height: 100%;
}

/* header */
.fs-header {
    padding: 18px 22px 6px 22px;
    border-bottom: 1px solid rgba(255,255,255,0.03);
    display: flex;
    flex-direction: column;
    gap: 8px;
    align-items: flex-start;
}

    /* keep a small left container helper */
    .fs-header .fs-left {
        min-width: 0;
    }

/* small area for actions (fullscreen button) inserted by JS */
.fs-actions {
    margin-top: 8px;
}

/* media area — keep block display for horizontal to preserve previous look */
.fs-media {
    padding: 12px 18px;
    display: block; /* preserve horizontal behavior */
    align-items: center;
    justify-content: center;
    min-height: 220px;
    max-height: calc(92vh - 230px); /* leave room for header + footer */
    box-sizing: border-box;
    overflow: hidden; /* prevent accidental overflow */
}

/* footer thumbnails */
.fs-footer {
    padding: 12px 18px;
    border-top: 1px solid rgba(255,255,255,0.03);
    background: linear-gradient(180deg, rgba(255,255,255,0.01), rgba(255,255,255,0.00));
}

.fs-thumbs {
    display: flex;
    gap: 8px;
    align-items: center;
    overflow-x: auto;
    padding-bottom: 6px;
}

    .fs-thumbs img {
        width: 72px;
        height: 48px;
        object-fit: cover;
        border-radius: 6px;
        cursor: pointer;
        opacity: 0.9;
        border: 2px solid transparent;
    }

        .fs-thumbs img.active {
            border-color: var(--clr-primary);
            opacity: 1;
        }

/* embed container aspect helpers (unchanged) */
.embed-container {
    position: relative;
    width: 100%;
    height: 0;
    overflow: hidden;
    background: #000;
    border-radius: 10px;
}

.embed-16-9 {
    padding-bottom: 56.25%;
}
/* horizontal */
.embed-9-16 {
    padding-bottom: 177.7778%;
}
/* tall vertical */
.embed-1-1 {
    padding-bottom: 100%;
}
/* square */

/* media fill */
.embed-container iframe,
.embed-container img,
.embed-container video {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    border: 0;
    display: block;
    background: #000;
    object-fit: cover;
}

/* poster/play overlay */
.fs-play-button {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    border-radius: 50%;
    border: 0;
    background: rgba(0,0,0,0.6);
    color: #fff;
    cursor: pointer;
    box-shadow: 0 6px 18px rgba(0,0,0,0.45);
    transition: transform .12s ease, box-shadow .12s ease;
}

    .fs-play-button:hover {
        transform: scale(1.04);
    }

/* mobile comfort */
@media (max-width:900px) {
    .fs-inner {
        width: 100%;
        height: 100%;
        border-radius: 0;
        max-height: 100vh;
    }

    .fs-content {
        gap: 6px;
    }

    .fs-header {
        padding: 12px;
    }

    .fs-media {
        padding: 8px 12px;
        max-height: calc(100vh - 200px);
    }

    .fs-thumbs img {
        width: 56px;
        height: 40px;
    }
}

/* accessibility focus */
.fs-play-button:focus, .fs-close:focus {
    outline: 3px solid rgba(28,183,169,0.24);
    outline-offset: 2px;
}

/* clickable-card nicety */
.project a, .featured-project > a {
    transition: transform .12s ease;
}

    .project a:active, .featured-project > a:active {
        transform: scale(.997);
    }

/* prevent overlay from being focusable when hidden */
#fullscreen-overlay[aria-hidden="true"] .fs-inner {
    pointer-events: none;
}

/* ===== non-intrusive overlay embed fallback to prevent collapse =====
   This keeps horizontal layout exactly as before; only ensures embed has a reasonable max/min.
*/
.fs-media .embed-container {
    width: 100%;
    box-sizing: border-box;
    min-height: 180px;
    max-width: 1200px; /* allows wide horizontal players */
}

    /* ensure overlay poster/media fit the embed area */
    .fs-media .embed-container img,
    .fs-media .embed-container video,
    .fs-media .embed-container iframe {
        width: 100%;
        height: 100%;
        object-fit: cover;
    }

/* ===== fullscreen button styling (small & unobtrusive) ===== */
.fs-fullscreen {
    background: transparent;
    border: 1px solid rgba(255,255,255,0.06);
    padding: 6px 8px;
    border-radius: 8px;
    color: var(--clr-light);
    cursor: pointer;
    font-weight: 700;
    font-size: 14px;
    display: inline-flex;
    align-items: center;
    justify-content: center;
}

    .fs-fullscreen:hover {
        transform: translateY(-1px);
    }

    .fs-fullscreen:focus {
        outline: 3px solid rgba(28,183,169,0.18);
        outline-offset: 2px;
    }

/* ===========================
   VERTICAL SPLIT (DESKTOP) — ONLY applied when JS inserts .fs-split
   - desktop: two columns (details on left, media on right)
   - mobile: stacked, details above, media below
   - media column uses full available height; media is contained (no overflow)
   =========================== */

.fs-split {
    display: flex;
    gap: 18px;
    align-items: stretch; /* stretch children to full available height */
    justify-content: center;
    padding: 0 18px 12px 18px;
    box-sizing: border-box;
    height: 100%; /* crucial: take the whole middle row's height */
    overflow: hidden;
}

    /* details column (header moved here by JS) */
    .fs-split .fs-header {
        flex: 1 1 40%;
        max-width: 46%;
        min-width: 260px;
        box-sizing: border-box;
        padding: 18px 12px 18px 12px;
        background: transparent;
        overflow-y: auto; /* allow long descriptions to scroll */
    }

    /* media column */
    .fs-split .fs-media {
        flex: 1 1 58%;
        max-width: 58%;
        box-sizing: border-box;
        padding: 12px 0;
        display: flex;
        align-items: center;
        justify-content: center;
        height: 100%; /* fill the split height */
        overflow: hidden;
    }

    /* make embed-container fill the media column height (remove aspect padding for split) */
    .fs-split .embed-container {
        width: 100%;
        height: 100%; /* fill available column height */
        padding-bottom: 0; /* don't use padding-bottom aspect trick inside split */
        min-height: 320px; /* ensure tall vertical gets space */
        box-sizing: border-box;
        overflow: hidden;
    }

        /* ensure media keeps aspect ratio and fits within column height (no overflow) */
        .fs-split .embed-container iframe,
        .fs-split .embed-container img,
        .fs-split .embed-container video {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%); /* center the media */
            width: auto; /* let width scale automatically */
            height: 100%; /* fill height of column */
            max-width: 100%;
            object-fit: contain; /* show whole video; no cropping */
        }

        /* video controls may add to height — limit to container */
        .fs-split .embed-container video {
            max-height: 100%;
            box-sizing: border-box;
        }

/* mobile: stack header above media for vertical projects */
@media (max-width: 900px) {
    .fs-split {
        flex-direction: column;
        padding: 8px 12px;
        height: auto; /* allow content to size normally on mobile */
    }

        .fs-split .fs-header {
            order: 0;
            max-width: 100%;
            width: 100%;
            padding: 12px 0;
            max-height: none;
        }

        .fs-split .fs-media {
            order: 1;
            max-width: 100%;
            width: 100%;
            padding: 8px 0 12px;
            height: auto;
        }

        .fs-split .embed-container {
            height: 0; /* use aspect ratio helpers on mobile */
            padding-bottom: 177.7778%; /* keep tall vertical aspect on mobile */
            min-height: 220px;
        }

            .fs-split .embed-container iframe,
            .fs-split .embed-container img,
            .fs-split .embed-container video {
                position: absolute;
                top: 0;
                left: 0;
                transform: none;
                width: 100%;
                height: 100%;
                object-fit: cover;
            }
}

/* small refinement: thumbnail sizes for vertical layout on desktop */
@media (min-width: 900px) {
    .fs-thumbs img {
        width: 64px;
        height: 48px;
    }
}
/* ----- HIDE .fs-media when overlay is handling a vertical split ----- */
#fullscreen-overlay.vertical .fs-media {
    display: none !important;
}

/* ensure fs-split is placed in the content middle row and fills height */
#fullscreen-overlay .fs-split {
    grid-row: 2; /* explicit row placement so it occupies the growable area */
    height: 100%; /* fill the middle row's height */
    align-self: stretch;
}

/* defensive: when overlay.vertical is present, make sure the grid template still behaves */
#fullscreen-overlay.vertical .fs-content {
    grid-template-rows: auto 1fr auto; /* explicit, in case your styles were modified */
    min-height: 0; /* allow children to size inside correctly */
}

/* small fix: when fs-media is hidden, ensure footer is not pushed off by a stray min-height */
#fullscreen-overlay.vertical .fs-footer {
    z-index: 2;
}

/* ===== Overlay height / fs-content growth =====
   Make the overlay much taller on desktop (approx 85-95% of viewport)
   and ensure fs-content's middle row is growable so fs-split fills it.
*/
:root {
    --overlay-height-desktop: 90vh; /* feel free to set 85vh / 92vh etc. */
    --overlay-height-max: 95vh;
}

/* increase the dialog height so fs-content has room */
.fs-inner {
    height: var(--overlay-height-desktop);
    max-height: var(--overlay-height-max);
    /* keep the radius & style but ensure vertical space */
    box-sizing: border-box;
}

/* ensure the grid middle row grows to occupy available overlay height */
.fs-content {
    grid-template-rows: auto 1fr auto; /* header / middle / footer */
    min-height: 0; /* allow children to shrink/scroll correctly */
    height: 100%;
}

/* For very large screens allow a touch more */
@media (min-width: 1600px) {
    :root {
        --overlay-height-desktop: 92vh;
        --overlay-height-max: 95vh;
    }
}

/* ----- vertical mode tweaks (overlay.vertical applied by JS) ----- */

/* hide the legacy .fs-media when vertical split is used (prevents double reserving) */
#fullscreen-overlay.vertical .fs-media {
    display: none !important;
    height: 0 !important;
    min-height: 0 !important;
    padding: 0 !important;
    margin: 0 !important;
}

/* ensure fs-footer stays visible and the split occupies middle row fully */
#fullscreen-overlay.vertical .fs-content {
    grid-template-rows: auto 1fr auto;
    min-height: 0;
}

/* ensure fs-split lands exactly in the middle growable area */
#fullscreen-overlay.vertical .fs-split {
    grid-row: 2; /* explicit placement */
    height: 100%; /* fill the middle row */
    align-self: stretch;
    overflow: hidden; /* inner pieces control scrolling */
}

    /* details column scrolls if it overflows; header inside it will be sticky on mobile */
    #fullscreen-overlay.vertical .fs-split .fs-header {
        position: relative;
        z-index: 10;
        background: transparent; /* header remains visible against overlay */
    }

    /* details column is allowed to scroll vertically when content is long */
    #fullscreen-overlay.vertical .fs-split .fs-header,
    #fullscreen-overlay.vertical .fs-split .fs-left {
        max-height: 100%;
        overflow: auto;
        -webkit-overflow-scrolling: touch;
    }

    /* media column: fill available height safely (no cropping) */
    #fullscreen-overlay.vertical .fs-split .fs-media {
        display: flex;
        align-items: center;
        justify-content: center;
        height: 100%;
        overflow: hidden;
    }

    /* embed-container inside split: fill column height (no padding-bottom aspect trick) */
    #fullscreen-overlay.vertical .fs-split .embed-container {
        width: 100%;
        height: 100%;
        padding-bottom: 0; /* disable aspect padding inside split */
        min-height: 320px; /* ensure a comfortable minimum */
        box-sizing: border-box;
        position: relative;
        overflow: hidden;
    }

        /* ensure the actual media keeps its aspect ratio and fits the column */
        #fullscreen-overlay.vertical .fs-split .embed-container iframe,
        #fullscreen-overlay.vertical .fs-split .embed-container img,
        #fullscreen-overlay.vertical .fs-split .embed-container video {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            height: 100%; /* fill the column height */
            width: auto; /* scale width automatically */
            max-width: 100%;
            object-fit: contain; /* show entire video without cropping */
        }

        /* video element controls: respect box */
        #fullscreen-overlay.vertical .fs-split .embed-container video {
            max-height: 100%;
        }

/* ===== Mobile: keep header always visible =====
   On mobile we stack splitted content; make header sticky so it never scrolls away.
*/
@media (max-width: 900px) {
    /* make dialog full height on small screens so there's room for sticky header */
    .fs-inner {
        height: 100vh;
        max-height: 100vh;
        border-radius: 0;
    }

    /* when vertical, stack and allow split to scroll but keep header sticky */
    #fullscreen-overlay.vertical .fs-split {
        flex-direction: column;
        height: auto;
        overflow: auto;
    }

        /* pin the header inside the split so it doesn't scroll away */
        #fullscreen-overlay.vertical .fs-split .fs-header {
            position: sticky;
            top: 0;
            z-index: 30;
            background: linear-gradient(180deg, rgba(10,12,14,0.98), rgba(10,12,14,0.96));
            padding-top: 12px;
            padding-bottom: 12px;
        }

        /* details column (fs-left) can scroll under the sticky header */
        #fullscreen-overlay.vertical .fs-split .fs-left {
            overflow: auto;
            max-height: calc(100vh - 120px); /* keep some room for media/thumbnails */
        }

        /* restore aspect-ratio sizing for media on mobile so thumbnails & controls fit */
        #fullscreen-overlay.vertical .fs-split .embed-container {
            height: 0;
            padding-bottom: 177.7778%; /* vertical aspect */
            min-height: 220px;
        }

            #fullscreen-overlay.vertical .fs-split .embed-container iframe,
            #fullscreen-overlay.vertical .fs-split .embed-container img,
            #fullscreen-overlay.vertical .fs-split .embed-container video {
                position: absolute;
                top: 0;
                left: 0;
                transform: none;
                width: 100%;
                height: 100%;
                object-fit: cover;
            }
}

/* Defensive: if header still gets covered by the mobile top bar, give extra top offset */
/* (adjust the 56px if your mobile bar height changes) */
@media (max-width: 900px) {
    #fullscreen-overlay.vertical .fs-split .fs-header {
        /* if you have a fixed mobile-bar of 56px at the top of the page, uncomment: */
        /* top: 56px; */
    }
}

/* End of file */
